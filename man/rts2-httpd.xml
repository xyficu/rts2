<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [

  <!ENTITY dhfirstname "<firstname>Petr</firstname>">
  <!ENTITY dhsurname   "<surname>Kubanek</surname>">
  <!ENTITY dhdate      "<date>2010-04-19</date>">
  <!ENTITY dhsection   "<manvolnum>7</manvolnum>">
  <!ENTITY dhemail     "<email>petr@kubanek.net</email>">
  <!ENTITY dhusername  "Petr Kubanek">
  <!ENTITY dhpackage   "rts2-httpd">

  <!ENTITY % rts2 SYSTEM "rts2.ent">
  %rts2;
]>

<refentry>
  <refentryinfo>
    <title>&dhpackage;</title>
    <productname>rts2</productname>
    <productnumber>&rts2version;</productnumber>
    &dhdate;
    <authorgroup>
      <author>
        &dhfirstname;
        &dhsurname;
	<contrib>Wrote this manual page.</contrib>
	<address>
          &dhemail;
	</address>
      </author>
    </authorgroup>
    <copyright>
      <year>2008-2010</year>
      <holder>&dhusername;</holder>
    </copyright>
    <copyright>
      <year>2011</year>
      <holder>&fzu;</holder>
    </copyright>
    &legal;
  </refentryinfo>
  <refmeta>
    <refentrytitle>&dhpackage;</refentrytitle>
    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>
    <refpurpose>
      Provides Web, JSON and XML-RPC access to RTS2. It also triggers execution of
      state and events based scripts, and includes HTTP server serving database
      access pages.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <arg choice="opt"><option>-p <replaceable>port number</replaceable></option></arg>
      <arg choice="opt"><option>--event-file <replaceable>event file</replaceable></option></arg>
      <arg choice="opt"><option>--bb-queue <replaceable>queue name</replaceable></option></arg>
      &deviceapp;
    </cmdsynopsis>

    &helpsynopsis;

  </refsynopsisdiv>

  <refsect1 id="description">
    <title>DESCRIPTION</title>

    <para>
      <command>&dhpackage;</command> provides XML-RPC and JSON access to RTS2 functions.
      Commands are described on the web, on <ulink
      url="http://rts2.org/wiki/code:xmlrpc">http://rts2.org/wiki/code:xmlrpc</ulink>.
    </para>

    <para>
      <command>&dhpackage;</command> also provides flexible triggering mechanism for reacting
      on device states and values changes.
    </para>

    <para>
      
    </para>
  </refsect1>
  <refsect1>
    <title>OPTIONS</title>

    &optiongnu;

    <variablelist>
      <varlistentry>
        <term><option>-p <replaceable class="parameter">port number</replaceable></option></term>
        <listitem>
          <para>
	    Specify HTTP and XML-RPC port. Daemon will listen on this port for incoming
	    HTTP (Web, JSON and XML-RPC interfaces) connections.
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--event-file <replaceable class="parameter">event file path</replaceable></option></term>
        <listitem>
	  <para>
	    Specify event trigger file. Read bellow on format used for this
	    file.  Sending <emphasis>signal 1</emphasis> to
	    <emphasis>rts2-xmlrcd</emphasis> will force reload of event file.
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--bb-queue <replaceable class="parameter">queue name</replaceable></option></term>
	<listitem>
	  <para>
	    Specify name of BB queue. Targets from BB are queued to the given queue.
	  </para>
	</listitem>
      </varlistentry>

      &deviceapplist;

    </variablelist>
  </refsect1>
  <refsect1>
    <title>XML configuration file</title>
    <para>
      Due to complex nature of <command>&dhpackage;</command>, it uses own
      configuration file. This is specified with <option>--event-file</option>.
      Multiple configuration files can be specified.
    </para>
    <para>
      Configuration file is an XML file, which format is specified in schema.
      It has three major sections - <emphasis>http</emphasis>,
      <emphasis>events</emphasis> and <emphasis>bb</emphasis>.
    </para>
  </refsect1>
  <refsect1>
    <title>Http section</title>
    <para>
      <emphasis>Http</emphasis> section configures embbeded HTTP server. It
      includes entries to configure document root, public directories and other relevant options.
    </para>
    <refsect2>
      <title>docroot</title>
      <para>
	Document root of the embedded HTTP server. Requests which do not match
	<emphasis>API</emphasis> entries, nor any pages provided in
	<emphasis>&dhpackage;</emphasis> source file, are directed to this directory.
      </para>
    </refsect2>
    <refsect2>
      <title>public</title>
      <para>
	Public path. The paths listed as public will be accessible without
	password. Please use * as wildcard, ** for recursive wildcard.
      </para>
    </refsect2>
    <refsect2>
      <title>dir</title>
      <para>
	Maps system directory to access. Must containt "path" and "to" arguments, providing web server path
	and local path.
      </para>
    </refsect2>
    <refsect2>
      <title>default-channel</title>
      <para>
        Specify default channel for image display. -1 is used to display all
	channels in multiple FITS file, 0-.. sets the channel (extension number).
      </para>
      <para>
	This option is used only when displaying multiple FITS files. It does not need to
	be specified on setups where only single extenstion FITS files are produced.
      </para>
    </refsect2>
    <refsect2>
      <title>defaultImageLabel</title>
      <para>
        Default RTS2 expansion character for image label. Image label is printed in lower
	part of the image, and can contains data from FITS header. Please see
	<citerefentry><refentrytitle>rts2</refentrytitle><manvolnum>7</manvolnum></citerefentry>
	for details.
      </para>
    </refsect2>
  </refsect1>
  <refsect1>
    <title>Events section</title>
    <para>
      <emphasis>Events</emphasis> section configures
      <command>&dhpackage;</command> reactions to changes of system
      environment.
    </para>

    <para>
      The section contains entries for response to events on various devices.
      It contains multiple device nodes. Device to which the node applies is
      identified by name attribute. The node contains child nodes applying
      trigger either on value or device state change.
    </para>
    <para>
      Value change expects name of the value being specified as node "name"
      attribute. The actions specified are executed every time the variable
      value is changed and its match an optional test. Test is specified as an
      node attribute called "test".
    </para>

    <refsect2>
      <title>Event actions</title>

      <para>
        RTS2 currently supports two actions, which can be executed on value
        change. They are <emphasis>record</emphasis>  and <emphasis>command</emphasis>.
      </para>

      <refsect3>
        <title>record</title>
        <para>
  	  Records value change to database. This of course works only if RTS2 was
 	  compiled with database support. Values are recorded to various record_
	  tables.
        </para>
      </refsect3>
      <refsect3>
        <title>command</title>
        <para>
  	  This action executes given command. The command is executed with
  	  environmental variables filled with values of all devices presents.
  	  Environemntal variables names are formed from device name and variable
  	  name joined with underscore (_). Their value is something sensible,
  	  what can be printed out (booleans as true/false string, double numbers
  	  in readable form, RA and DEC in sexadecimal notation,..).
        </para>
        <para>
  	  Centrald state and variables are added as
  	  <emphasis>centraldN_name</emphasis>, where N is number from 1. This is
  	  to distinguish between posibly different centrald XMLRPC can be
  	  connected. You will usually use N = 1.
        </para>
        <para>
  	  Moreover, device state is also present in environment, as device name
  	  joined with _state. Let's suppose we have a device S1, with variable
  	  DBL with value 0.123. Device is currently in state 1. If you put in
  	  command script which will call set and store all environemtal variables
  	  to file, you will get this for S1:
        </para>
        <programlisting>
<![CDATA[
S1_DBL=0.123
S1_state=1
]]>
        </programlisting>
        <para>
  	  So to send email with status of dome switches, which are in DOME device
  	  variables end_switch_open and end_switch_close, you should modify
  	  following program:
        </para>
        <programlisting>
<![CDATA[
#!/bin/bash

echo "Hi, dome end switches values: $DOME_end_switch_open $DOME_end_switch_close
centrald1 sun_alt: $centrald1_sun_alt
  
Regards, Telescope (the)" | mail -s 'DOME end switches' observer@example.com
]]>
        </programlisting>
      </refsect3>
      <refsect3>
	<title>email</title>
	<para>
	  Provides way to send emails with predefined content to an address.
	  Should contain "to", "cc", "bcc", "subject" and "body" tags, with meaning hopefully clear enough.
	</para>
	<para>
	  Subject and body can contain "value" and "device" tags for a value or device expansion. Please consult
	  the following example for details:
	</para>
        <programlisting>
<![CDATA[
<email>
  <to>example@example.com</to>
  <cc>name.surname@example.com</cc>
  <bcc>name_surname@sub_domain.example.com</bcc>
  <subject>Hey, you are exposing!</subject>
  <body>It's my pleasure to inform <device>D1</device> you, <device>D2</device> that the camera
    is exposing! Juhuu! Exposure is <value device="D1">V1</value> <value>device_value</value>
  </body>
</email>
]]>
        </programlisting>
      </refsect3>
    </refsect2>  
  </refsect1>
  <refsect1>
    <title>BB section</title>
    <para>
      This section provides details about BB (Big Brother) connections. Please
      see <citerefentry><refentrytitle>rts2-bb</refentrytitle><manvolnum>7</manvolnum></citerefentry>
      for details.
    </para>
    <refsect2>
      <title>server</title>
      <para>
        BB server URL.
      </para>
    </refsect2>
    <refsect2>
      <title>observatory</title>
      <para>
        Observatory ID. Number identifing observatory on BB.
      </para>
    </refsect2>
    <refsect2>
      <title>password</title>
      <para>
        Password for the observatory. Username on the BB side is observatory ID.
      </para>
    </refsect2>
    <refsect2>
      <title>cadency</title>
      <para>
        Time interval between reposts of observatory status. Default to 60 seconds.
      </para>
    </refsect2>
  </refsect1>
  <refsect1>
    <title>Event trigger configuration file</title>
    <para>
      This section describes event triggering file. It is the XML file
      specified with <emphasis>--event-file</emphasis> option. Event
      configuration file can be validated with provided XML schema file.
    </para>
    <refsect2>
      <title>Example event triggering configuration file</title>
      <para>
        To start with, there is an example configuration file.
      </para>
      <programlisting>
<![CDATA[
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="file:events.xsd">
  <http>
    <docroot>/var/www/rts2</docroot>
  </http>  
  <events>
    <device name="C0">
      <state state-mask="2" state="2">
        <command>/etc/rts2/event.d/c0_reading</command>
      </state>
    </device>
    <device name="DOME">
      <state state-mask="7" state="4">
        <command>/etc/rts2/event.d/dome_opened</command>
      </state>
      <state state-mask="7" state="1">
        <command>/etc/rts2/event.d/dome_closed</command>
      </state>
    </device>
    <device name="C0">
      <value name="CCD_TEMP">
        <record/<
      </value>
      <value name="CCD_SET" cadency=60>
        <record/>
      </value>
    </device>
  </events>
</config>  
]]>
      </programlisting>
      <para>
        This event file, when passed to &dhpackage; with --event-file option, will:
        <itemizedlist>
          <listitem>
  	    <para>
	      execute <command>/etc/rts2/event.d/c0_reading</command> when camera C0 start reading of the chip (switch from second state bit from 0 to 1).
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      execute <command>/etc/rts2/event.d/dome_opened</command> when dome
	      device with name DOME changes third bit (0x04) from 0 to 1, e.g. when it switched to opened state.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      execute <command>/etc/rts2/event.d/dome_closed</command> when dome
	      device with name DOME changes first bit (0x01) from 0 to 1, e.g. when it switched to opened state.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      Record any changes to CCD_TEMP value from C0 device. The changes
	      are recorded as soon as they are transmited to XML-RPCD. Ussully
	      all RTS2 devices reguarly send updates on their values to all
	      connected clients, so this should work reasonably well. Please note
	      that only when value changes, its new value is recorded - if value
	      stays the same, it is not recorded.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      Record any changes of CCD_SET value from C0 device. But the changes
	      will be recorded only every 60 seconds. This means following: if
	      the value changed within 60 seconds, it will be recorded (with
	      proper time).  If it changes more then once within those 60
	      seconds, only last value will be recorded. Remember that even then,
	      only changes are recorded - so if there wasn't any change to the
	      value within 60 seconds, database record wouldn't be created.
	    </para>
	  </listitem>
        </itemizedlist>
      </para>
    </refsect2>
  </refsect1>
  <refsect1>
    <title>Configuration file options</title>
    <para>
      Please consult
      <citerefentry><refentrytitle>rts2.ini</refentrytitle><manvolnum>5</manvolnum></citerefentry>
      page for details about XML-RPC options available in the configuration file.
    </para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>
      <citerefentry>
        <refentrytitle>rts2</refentrytitle>
	<manvolnum>1</manvolnum>
      </citerefentry>,
      <citerefentry>
        <refentrytitle>rts2.ini</refentrytitle>
	<manvolnum>5</manvolnum>
      </citerefentry>,
      <citerefentry>
        <refentrytitle>rts2-xmlrpcclient</refentrytitle>
	<manvolnum>1</manvolnum>
      </citerefentry>,
      <citerefentry>
        <refentrytitle>rts2-bb</refentrytitle>
	<manvolnum>7</manvolnum>
      </citerefentry>
    </para>

  </refsect1>
</refentry>
