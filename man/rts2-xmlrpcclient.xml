<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [

  <!ENTITY dhfirstname "<firstname>Petr</firstname>">
  <!ENTITY dhsurname   "<surname>Kubanek</surname>">
  <!ENTITY dhdate      "<date>2011-01-28</date>">
  <!ENTITY dhsection   "<manvolnum>1</manvolnum>">
  <!ENTITY dhemail     "<email>petr@kubanek.net</email>">
  <!ENTITY dhusername  "Petr Kubanek">
  <!ENTITY dhpackage   "rts2-xmlrpcclient">

  <!ENTITY devvar      "<arg choice='req' rep='repeat'><replaceable class='parameter'>device</replaceable>.<replaceable class='parameter'>variable</replaceable></arg>">


  <!ENTITY % rts2 SYSTEM "rts2.ent">
  %rts2;
]>

<refentry>
  <refentryinfo>
    <title>&dhpackage;</title>
    <productname>rts2</productname>
    <productnumber>&rts2version;</productnumber>
    &dhdate;
    <authorgroup>
      <author>
        &dhfirstname;
        &dhsurname;
	<contrib>Wrote most of the RTS2 package.</contrib>
	<address>
          &dhemail;
	</address>
      </author>
    </authorgroup>
    <copyright>
      <year>2008-2009</year>
      <holder>&dhusername;</holder>
    </copyright>
    <copyright>
      <year>2011</year>
      <holder>&fzu;</holder>
    </copyright>
    &legal;
  </refentryinfo>
  <refmeta>
    <refentrytitle>&dhpackage;</refentrytitle>
    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>
    <refpurpose>
      Communicate with RTS2 XML-RPC daemon. Provides commands to interact with
      RTS2 through a single HTTP-accessible communication channel.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <group choice='req'>
        <arg choice='plain'><option>-v</option></arg>
        <arg choice='plain'><option>--quiet</option></arg>
        <arg choice='plain'><option>-g</option> &devvar;</arg>
        <arg choice='plain'><option>-G</option> &devvar;</arg>
        <arg choice='plain'><option>-s</option> <arg choice='plain' rep='repeat'><arg choice='req'><replaceable class='parameter'>device</replaceable>.<replaceable class='parameter'>variable</replaceable> <replaceable>value</replaceable></arg></arg></arg>
        <arg choice='plain'><option>-i</option> <arg choice='req' rep='repeat'><arg choice='req'><replaceable class='parameter'>device</replaceable>.<replaceable class='parameter'>variable</replaceable> <replaceable class='parameter'>increment</replaceable></arg></arg></arg>
        <arg choice='plain'><option>-S</option> <arg choice='req' rep='repeat'><replaceable class='parameter'>device</replaceable></arg></arg>
        <arg choice='plain'><option>-c</option> <arg choice='req' rep='repeat'><replaceable class='parameter'>device</replaceable>.<replaceable class='parameter'>command</replaceable></arg></arg>
	<arg choice='plain'><option>--targets</option> <arg choice='req' rep='repeat'><replaceable class='parameter'>target name</replaceable></arg></arg>
        <arg choice='plain'><option>--schedticket <replaceable class='parameter'>ticket ID</replaceable></option></arg>
        <arg choice='plain'><option>--master-state <replaceable class='parameter'>on|off|standby|rnight</replaceable></option></arg>
        <arg choice='plain'><option>-m</option></arg>
        <arg choice='plain'><option>-t</option> <arg choice='req' rep='repeat'><replaceable class='parameter'>device</replaceable></arg></arg>
        <arg choice='plain'><option>-u</option> <arg choice='req' rep='repeat'><replaceable class='parameter'>url</replaceable></arg></arg>
        <arg choice='plain'><option>--test</option></arg>
      </group>
      <arg choice='plain'><option>-P</option></arg>
      <arg choice='plain'><option>-p</option></arg>
      <arg choice='opt'><option>--hostname <replaceable class='parameter'>XML-RPCd host</replaceable></option></arg>
      <arg choice='opt'><option>--port <replaceable class='parameter'>XML-RPCd port number</replaceable></option></arg>
      <arg choice='opt'><option>--user <replaceable class='parameter'>username</replaceable></option></arg>
      <arg choice='opt'><option>--config <replaceable class='parameter'>config file</replaceable></option></arg>
      <arg choice='opt' rep='repeat'><option>-v</option></arg>
      &basicapp;
    </cmdsynopsis>
    &helpsynopsis;
  </refsynopsisdiv>

  <refsect1 id="description">
    <title>DESCRIPTION</title>
    <para>
      &dhpackage; is a test implementation of XMl-RPC protocol used by
      RTS2. It shares libraries with
      <citerefentry><refentrytitle>rts2-httpd</refentrytitle><manvolnum>7</manvolnum></citerefentry>,
      so it should work when <command>rts2-httpd</command> works.
    </para>
    <para>
      Apart from being the test implementation, rts2-xmlrpcclient also provides a
      few handy commands, which retrieve or set RTS2 values. Those commands can
      be used to interact with RTS2 from the command shell. RTS2 XML-RPC
      protocol can be used in various high level languages.
    </para>
  </refsect1>
  <refsect1 id="config">
    <title>Configuration</title>

    <para>
      Access to rts2-httpd server is ussually password protected, using
      either standard HTTP authorization, or custom authorization inside
      rts2-httpd. There are two options how to provide username and password
      for HTTP connections. They can be listed on command line, or specified in
      a configuration file. If you specify username using --user option,
      rts2-xmlrpcclient will ask for password. 
    </para>

    <para>
      If you specify username and password in a configuration file, the content
      of the file should look as in an example bellow.
    </para>
    <programlisting>
<![CDATA[
[xmlrpc]

authorization = "user:password"
]]>
    </programlisting>
    <para>
       This specify user as username and password as user password.
    </para>
  </refsect1>
  <refsect1 id="options">
    <title>OPTIONS</title>

    &optiongnu;

    <variablelist>
      <varlistentry>
        <term><option>-v</option></term>
	<listitem>
	  <para>
	    Increase verbosity. Multiple <option>-v</option> are possible.
	    Usefull to debug output of XML-RPC commands.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--quiet</option></term>
	<listitem>
	  <para>
	    Run quiet, don't report errors on stderr. Usefull in scripts,
	    dangerous when running from terminal, as it will suppress possibly
	    usefull messages.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-g</option></term>
        <listitem>
	  <para>Retrieve values passed on command line and prints them,
	  separated by line feed, on standard output. On input, device and
	  variable name should be separated by .. They are separated by _ on
	  output, so they can be used as system variables names. Suppose
	  that there is device SENSOR, with varibles var1 and var2, and xmlrpcd
	  is running on your computer. Following is sample execution:</para>
    <programlisting>
<![CDATA[
user@machine:~$ rts2-xmlrcclient -g SENSOR.var1 SENSOR.var2
SENSOR.var1=12.33
SENSOR.var2=56.34
]]>
    </programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-G</option></term>
	<listitem>
	  <para>Similar to -g, but do not print variables names on standard
	  output.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-s</option> <arg choice='plain' rep='repeat'><arg choice='req'><replaceable class='parameter'>device</replaceable>.<replaceable class='parameter'>variable</replaceable> <replaceable>value</replaceable></arg></arg></term>
	<listitem>
	  <para>
	    Set variables specified on command line.
	    Device name, variable name and value need to
	    be specified. Device name is separated from
	    the variable name with . (colon).
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-i</option> <arg choice='req' rep='repeat'><arg choice='req'><replaceable class='parameter'>device</replaceable>.<replaceable class='parameter'>variable</replaceable> <replaceable class='parameter'>increment</replaceable></arg></arg></term>
	<listitem>
	  <para>
	    Increment variable(s). Works simirarly to
	    <option>-s</option>, only executes +=
	    operation instead of =.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-S <replaceable><arg rep="repeat">device</arg></replaceable></option></term>
	<listitem>
	  <para>
	    Get state of device(s) specified as argument. There is an example, assuming SENSOR is present in the environment:
    <programlisting>
<![CDATA[
user@machine:~$ rts2-xmlrcclient -S SENSOR
SENSOR 0 sensor 0
]]>
    </programlisting>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-c</option> <arg choice='req' rep='repeat'><replaceable class='parameter'>device</replaceable>.<replaceable class='parameter'>command</replaceable></arg></term>
	<listitem>
	  <para>
	    Executes commandi(s) on the given device. The
	    executed commands are standard RTS2 system
	    commands, which are either documented in the
	    components (devices) man pages, or can be
	    found in the source files.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--targets</option> <arg choice='req' rep='repeat'><replaceable class='parameter'>target name</replaceable></arg></term>
        <listitem>
	  <para>
	    List target(s) matching specifed names. You can use '%' as
	    wildcard. If no name is specifid, all targets in the database are
	    printed.
	  </para>
	  <para>
	    The matching targets are separated with newlines. The line includes
	    target ID, type, name, and target RA and DEC. Following example
	    list gives resonse to query for target with name M31.
	  </para>
	  <programlisting>
user@machine:~$ rts2-xmlrpcclient --targets M31
1001 79 M31 00:42:44.350 +41:16:08.63
          </programlisting>
	</listitem>
      </varlistentry>	
      <varlistentry>
        <term><option>--master-state <replaceable>on|off|standby|rnight</replaceable></option></term>
	<listitem>
	  <para>
	    Get master state either as a number, or as 0/1 respons to query if the state is on(ready), standby, off or ready night (rnight argument). Following is an
	    example, asking whenever system is in on state - reply 1 means it is (0 would mean it is not):
    <programlisting>
<![CDATA[
user@machine:~$ rts2-xmlrcclient --master-state on
1
]]>
    </programlisting>
	  </para>
	</listitem>
      </varlistentry>
     <varlistentry>
        <term><option>--hostname <replaceable>XML-RPCd host</replaceable></option></term>
        <listitem>
          <para>Specify XML-RPCd hostname.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--port <replaceable>XML-RPCd port number</replaceable></option></term>
        <listitem>
          <para>
	    Specify port on which XML-RPCd listen to incoming requests. Default
	    to 8889.
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--user</option></term>
        <listitem>
          <para>
	    Specify user login. User password must be specified from terminal.
	    If you would like to automatise logins, you can place user
	    credentials in configuration file, specified with
	    <option>--config</option>.
	  </para>  
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--config</option> <replaceable class='parameter'>config file</replaceable></term>
	<listitem>
	  <para>
	    Specify configuration file. The configuration file can hold user credentials.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><arg choice='plain' rep='repeat'><option>-v</option></arg></term>
      </varlistentry>
      &basicapplist;
    </variablelist>  
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>
      <citerefentry>
        <refentrytitle>rts2</refentrytitle>
	<manvolnum>7</manvolnum>
      </citerefentry>,
      <citerefentry>
        <refentrytitle>rts2.ini</refentrytitle>
	<manvolnum>5</manvolnum>
      </citerefentry>,
      <citerefentry>
        <refentrytitle>rts2-httpd</refentrytitle>
	<manvolnum>1</manvolnum>
      </citerefentry>
    </para>

  </refsect1>
</refentry>
